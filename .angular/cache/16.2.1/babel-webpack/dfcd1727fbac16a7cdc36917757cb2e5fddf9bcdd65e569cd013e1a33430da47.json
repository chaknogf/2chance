{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class FortmatPhone {\n  transform(value, ...args) {\n    if (typeof value !== 'string') {\n      return value;\n    }\n    // Eliminar todos los caracteres excepto números y espacios\n    const numericAndSpaceValue = value.replace(/[^\\d\\s]/g, '');\n    // Dividir en grupos de 8 caracteres y unir con espacio\n    const formattedValue = numericAndSpaceValue.replace(/(\\d{8})(?=\\d)/g, '$1 ');\n    return formattedValue;\n  }\n}\n_class = FortmatPhone;\n_class.ɵfac = function FortmatPhone_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"formatPhone\",\n  type: _class,\n  pure: true\n});","map":{"version":3,"names":["FortmatPhone","transform","value","args","numericAndSpaceValue","replace","formattedValue","pure"],"sources":["/Users/macbookairm2/Project/Consultas/2chance/src/app/pipe/telefono.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatPhone'\n})\n\nexport class FortmatPhone implements PipeTransform {\n  transform(value: any, ...args: any[]): any {\n    if (typeof value !== 'string') {\n      return value;\n    }\n\n    // Eliminar todos los caracteres excepto números y espacios\n    const numericAndSpaceValue = value.replace(/[^\\d\\s]/g, '');\n\n    // Dividir en grupos de 8 caracteres y unir con espacio\n    const formattedValue = numericAndSpaceValue.replace(/(\\d{8})(?=\\d)/g, '$1 ');\n\n    return formattedValue;\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,YAAY;EACvBC,SAASA,CAACC,KAAU,EAAE,GAAGC,IAAW;IAClC,IAAI,OAAOD,KAAK,KAAK,QAAQ,EAAE;MAC7B,OAAOA,KAAK;;IAGd;IACA,MAAME,oBAAoB,GAAGF,KAAK,CAACG,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;IAE1D;IACA,MAAMC,cAAc,GAAGF,oBAAoB,CAACC,OAAO,CAAC,gBAAgB,EAAE,KAAK,CAAC;IAE5E,OAAOC,cAAc;EACvB;;SAbWN,YAAY;;mBAAZA,MAAY;AAAA;;;QAAZA,MAAY;EAAAO,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}