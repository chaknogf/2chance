{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class FormatoFechaPipe {\n  transform(fecha) {\n    if (!fecha) return ''; // Manejo de fecha nula o vacía\n    // Divide la fecha en año, mes y día\n    const partes = fecha.split('-');\n    if (partes.length !== 3) return fecha; // Comprueba si la fecha tiene el formato esperado\n    const [anio, mes, dia] = partes;\n    // Formatea la fecha en el formato 'dd-MM-yyyy'\n    return `${dia}-${mes}-${anio}`;\n  }\n}\n_class = FormatoFechaPipe;\n_class.ɵfac = function FormatoFechaPipe_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"formatoFecha\",\n  type: _class,\n  pure: true\n});","map":{"version":3,"names":["FormatoFechaPipe","transform","fecha","partes","split","length","anio","mes","dia","pure"],"sources":["/Users/macbookairm2/Project/Consultas/2chance/src/app/pipe/formatoFecha.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatoFecha'\n})\nexport class FormatoFechaPipe implements PipeTransform {\n  transform(fecha: string): string {\n    if (!fecha) return ''; // Manejo de fecha nula o vacía\n\n    // Divide la fecha en año, mes y día\n    const partes = fecha.split('-');\n    if (partes.length !== 3) return fecha; // Comprueba si la fecha tiene el formato esperado\n\n    const [anio, mes, dia] = partes;\n\n    // Formatea la fecha en el formato 'dd-MM-yyyy'\n    return `${dia}-${mes}-${anio}`;\n  }\n}\n"],"mappings":";;AAKA,OAAM,MAAOA,gBAAgB;EAC3BC,SAASA,CAACC,KAAa;IACrB,IAAI,CAACA,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;IAEvB;IACA,MAAMC,MAAM,GAAGD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC;IAC/B,IAAID,MAAM,CAACE,MAAM,KAAK,CAAC,EAAE,OAAOH,KAAK,CAAC,CAAC;IAEvC,MAAM,CAACI,IAAI,EAAEC,GAAG,EAAEC,GAAG,CAAC,GAAGL,MAAM;IAE/B;IACA,OAAO,GAAGK,GAAG,IAAID,GAAG,IAAID,IAAI,EAAE;EAChC;;SAZWN,gBAAgB;;mBAAhBA,MAAgB;AAAA;;;QAAhBA,MAAgB;EAAAS,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}