{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { servicio } from './../../enums/enums';\nimport { Component, HostBinding } from '@angular/core';\nexport let FormCitaComponent = class FormCitaComponent {\n  constructor(CitasService, router, activateRoute, formBuilder) {\n    this.CitasService = CitasService;\n    this.router = router;\n    this.activateRoute = activateRoute;\n    this.formBuilder = formBuilder;\n    this.cita = [];\n    this.clases = 'row';\n    this.selectedDate = new Date();\n    this.bsConfig = {\n      dateInputFormat: 'DD-MM-YYYY'\n    };\n    this.edit = false;\n    this.c = {\n      id: 0,\n      expediente: 0,\n      fecha: new Date(),\n      especialidad: 0,\n      nota: '',\n      estado: false,\n      nombre: ''\n    };\n    this.e = {\n      servicio: servicio\n    };\n    // Declaración del array de citas\n    this.citas = [{\n      id: 1,\n      fecha: '2023-08-10',\n      expediente: 'EXP001',\n      especialidad: 'Traumatología',\n      nota: 'Primera consulta',\n      estado: 'Programada'\n    }, {\n      id: 2,\n      fecha: '2023-08-12',\n      expediente: 'EXP002',\n      especialidad: 'Cardiología',\n      nota: 'Seguimiento',\n      estado: 'Programada'\n    }\n    // Agrega más citas según sea necesario\n    ];\n  }\n\n  ngOnInit() {\n    // const params = this.activateRoute.snapshot.params;\n    // // Verificar si se proporcionó un ID de paciente\n    // if (params['id']) {\n    //   this.CitasService.getCitas(params['id'])\n    //     .subscribe(\n    //       data => {\n    //         this.c = data;\n    //         this.edit = true;\n    //       },\n    //       error => console.log(error)\n    //     )\n    // }\n  }\n  crearCita() {\n    this.CitasService.agendar(this.c).subscribe(data => {\n      this.c = data;\n      this.router.navigate(['/citas']);\n    });\n  }\n  selectAllText(event) {\n    event.target.select(); // Selecciona todo el texto en el input\n  }\n};\n\n__decorate([HostBinding('class')], FormCitaComponent.prototype, \"clases\", void 0);\nFormCitaComponent = __decorate([Component({\n  selector: 'app-form-cita',\n  templateUrl: './formCita.component.html',\n  styleUrls: ['./formCita.component.css']\n})], FormCitaComponent);","map":{"version":3,"names":["servicio","Component","HostBinding","FormCitaComponent","constructor","CitasService","router","activateRoute","formBuilder","cita","clases","selectedDate","Date","bsConfig","dateInputFormat","edit","c","id","expediente","fecha","especialidad","nota","estado","nombre","e","citas","ngOnInit","crearCita","agendar","subscribe","data","navigate","selectAllText","event","target","select","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/macbookairm2/Project/Consultas/2chance/src/app/citas/formCita/formCita.component.ts"],"sourcesContent":["import { CitasService } from './../../services/citas.service';\nimport { servicio } from './../../enums/enums';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit, HostBinding } from '@angular/core';\nimport { Icitas } from 'src/app/models/Icitas';\nimport { IenumEspecialidad } from 'src/app/models/Ienum';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-form-cita',\n  templateUrl: './formCita.component.html',\n  styleUrls: ['./formCita.component.css']\n})\nexport class FormCitaComponent implements OnInit {\n\n  public cita: Icitas[] = [];\n  @HostBinding('class') clases = 'row';\n  selectedDate: Date = new Date();\n  bsConfig = { dateInputFormat: 'DD-MM-YYYY' };\n  edit: boolean = false;\n\n  c: Icitas = {\n    id: 0,\n    expediente: 0,\n    fecha: new Date,\n    especialidad: 0,\n    nota: '',\n    estado: false,\n    nombre: ''\n  }\n  e: IenumEspecialidad = {\n    servicio: servicio\n  }\n\n  constructor (public CitasService: CitasService,  private router: Router,\n    private activateRoute: ActivatedRoute, private formBuilder: FormBuilder ){}\n\n\n  ngOnInit() {\n    // const params = this.activateRoute.snapshot.params;\n\n    // // Verificar si se proporcionó un ID de paciente\n    // if (params['id']) {\n    //   this.CitasService.getCitas(params['id'])\n    //     .subscribe(\n    //       data => {\n    //         this.c = data;\n    //         this.edit = true;\n    //       },\n    //       error => console.log(error)\n    //     )\n    // }\n\n\n  }\n\n  crearCita(): void {\n    this.CitasService.agendar(this.c).subscribe(data => {\n      this.c = data;\n      this.router.navigate(['/citas']);\n    })\n  }\n\n\n\n  // Declaración del array de citas\n  citas = [\n    {\n      id: 1,\n      fecha: '2023-08-10',\n      expediente: 'EXP001',\n      especialidad: 'Traumatología',\n      nota: 'Primera consulta',\n      estado: 'Programada'\n    },\n    {\n      id: 2,\n      fecha: '2023-08-12',\n      expediente: 'EXP002',\n      especialidad: 'Cardiología',\n      nota: 'Seguimiento',\n      estado: 'Programada'\n    },\n    // Agrega más citas según sea necesario\n  ];\n\n\n\n  selectAllText(event: any) {\n    event.target.select(); // Selecciona todo el texto en el input\n  }\n\n\n\n}\n"],"mappings":";AACA,SAASA,QAAQ,QAAQ,qBAAqB;AAE9C,SAASC,SAAS,EAAUC,WAAW,QAAQ,eAAe;AAUvD,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAqB5BC,YAAoBC,YAA0B,EAAWC,MAAc,EAC7DC,aAA6B,EAAUC,WAAwB;IADrD,KAAAH,YAAY,GAAZA,YAAY;IAAyB,KAAAC,MAAM,GAANA,MAAM;IACrD,KAAAC,aAAa,GAAbA,aAAa;IAA0B,KAAAC,WAAW,GAAXA,WAAW;IApBrD,KAAAC,IAAI,GAAa,EAAE;IACJ,KAAAC,MAAM,GAAG,KAAK;IACpC,KAAAC,YAAY,GAAS,IAAIC,IAAI,EAAE;IAC/B,KAAAC,QAAQ,GAAG;MAAEC,eAAe,EAAE;IAAY,CAAE;IAC5C,KAAAC,IAAI,GAAY,KAAK;IAErB,KAAAC,CAAC,GAAW;MACVC,EAAE,EAAE,CAAC;MACLC,UAAU,EAAE,CAAC;MACbC,KAAK,EAAE,IAAIP,IAAI,CAAJ,CAAI;MACfQ,YAAY,EAAE,CAAC;MACfC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE,KAAK;MACbC,MAAM,EAAE;KACT;IACD,KAAAC,CAAC,GAAsB;MACrBxB,QAAQ,EAAEA;KACX;IAiCD;IACA,KAAAyB,KAAK,GAAG,CACN;MACER,EAAE,EAAE,CAAC;MACLE,KAAK,EAAE,YAAY;MACnBD,UAAU,EAAE,QAAQ;MACpBE,YAAY,EAAE,eAAe;MAC7BC,IAAI,EAAE,kBAAkB;MACxBC,MAAM,EAAE;KACT,EACD;MACEL,EAAE,EAAE,CAAC;MACLE,KAAK,EAAE,YAAY;MACnBD,UAAU,EAAE,QAAQ;MACpBE,YAAY,EAAE,aAAa;MAC3BC,IAAI,EAAE,aAAa;MACnBC,MAAM,EAAE;;IAEV;IAAA,CACD;EAjD2E;;EAG5EI,QAAQA,CAAA;IACN;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;EAKFC,SAASA,CAAA;IACP,IAAI,CAACtB,YAAY,CAACuB,OAAO,CAAC,IAAI,CAACZ,CAAC,CAAC,CAACa,SAAS,CAACC,IAAI,IAAG;MACjD,IAAI,CAACd,CAAC,GAAGc,IAAI;MACb,IAAI,CAACxB,MAAM,CAACyB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,CAAC;EACJ;EA2BAC,aAAaA,CAACC,KAAU;IACtBA,KAAK,CAACC,MAAM,CAACC,MAAM,EAAE,CAAC,CAAC;EACzB;CAID;;AA9EuBC,UAAA,EAArBlC,WAAW,CAAC,OAAO,CAAC,C,gDAAgB;AAH1BC,iBAAiB,GAAAiC,UAAA,EAL7BnC,SAAS,CAAC;EACToC,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWpC,iBAAiB,CAiF7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}