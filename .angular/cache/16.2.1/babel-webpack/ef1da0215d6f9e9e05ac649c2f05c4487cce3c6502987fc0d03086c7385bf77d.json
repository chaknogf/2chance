{"ast":null,"code":"var _class;\nimport { interval } from 'rxjs';\nimport { switchMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PacientesService {\n  constructor(http) {\n    this.http = http;\n    this.urlapi = \"http://localhost:8000\";\n  }\n  getPacientes() {\n    return this.http.get(this.urlapi + \"/pacientes\");\n  }\n  getPaciente(exp) {\n    return this.http.get(this.urlapi + \"/paciente/\" + exp);\n  }\n  getNombre(nombre, apellido) {\n    const queryParams = `?nombre=${nombre}&apellido=${apellido}`;\n    return this.http.get(`${this.urlapi}/pacientefind/${queryParams}`);\n  }\n  getIdPaciente(id) {\n    const queryParams = `?id=${id}`;\n    return this.http.get(`${this.urlapi}/pacienteId/${queryParams}`);\n  }\n  getdpi(cui) {\n    const queryParams = `?cui=${cui}`;\n    return this.http.get(`${this.urlapi}/dpi/${queryParams}`);\n  }\n  crearPaciente(paciente) {\n    return this.http.post(this.urlapi + \"/paciente/\", paciente);\n  }\n  editPaciente(exp, updateP) {\n    return this.http.put(this.urlapi + \"/paciente/\" + exp, updateP);\n  }\n  deletePaciente(id) {\n    return this.http.delete(this.urlapi + \"/borrar/\" + id);\n  }\n  Expediente() {\n    return interval(900).pipe(switchMap(() => this.http.get(this.urlapi + '/expediente')));\n  }\n}\n_class = PacientesService;\n_class.ɵfac = function PacientesService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["interval","switchMap","PacientesService","constructor","http","urlapi","getPacientes","get","getPaciente","exp","getNombre","nombre","apellido","queryParams","getIdPaciente","id","getdpi","cui","crearPaciente","paciente","post","editPaciente","updateP","put","deletePaciente","delete","Expediente","pipe","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/macbookairm2/Project/Consultas/2chance/src/app/services/pacientes.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, interval } from 'rxjs';\nimport { switchMap } from 'rxjs';\nimport { Ipaciente } from '../models/Ipaciente';\n\ninterface nuevoExpResponse{\n  nuevo_exp: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PacientesService {\n\n  private urlapi = \"http://localhost:8000\";\n  constructor(private http: HttpClient) { }\n\n  getPacientes(): Observable<any> {\n    return this.http.get(this.urlapi + \"/pacientes\");\n  }\n\n  getPaciente(exp: number): Observable<any> {\n    return this.http.get(this.urlapi + \"/paciente/\" + exp);\n  }\n\n  getNombre(nombre: string, apellido: string): Observable<any> {\n    const queryParams = `?nombre=${nombre}&apellido=${apellido}`;\n    return this.http.get(`${this.urlapi}/pacientefind/${queryParams}`);\n  }\n\n  getIdPaciente(id: number): Observable<any> {\n    const queryParams = `?id=${id}`;\n    return this.http.get(`${this.urlapi}/pacienteId/${queryParams}`);\n  }\n\n  getdpi(cui: number): Observable<any> {\n    const queryParams = `?cui=${cui}`;\n    return this.http.get(`${this.urlapi}/dpi/${queryParams}`);\n  }\n\n  crearPaciente(paciente: Ipaciente): Observable<any>{\n    return this.http.post(this.urlapi + \"/paciente/\", paciente);\n  }\n\n  editPaciente(exp: number, updateP: Ipaciente): Observable<any>{\n    return this.http.put(this.urlapi + \"/paciente/\" + exp, updateP);\n  }\n\n  deletePaciente(id: number): Observable<any>{\n    return this.http.delete(this.urlapi + \"/borrar/\" + id);\n  }\n\n  Expediente(): Observable<any> {\n    return interval(900).pipe(\n      switchMap(() => this.http.get(this.urlapi + '/expediente'))\n    );\n  }\n\n\n\n}\n\n"],"mappings":";AAEA,SAAqBA,QAAQ,QAAQ,MAAM;AAC3C,SAASC,SAAS,QAAQ,MAAM;;;AAUhC,OAAM,MAAOC,gBAAgB;EAG3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,MAAM,GAAG,uBAAuB;EACA;EAExCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,MAAM,GAAG,YAAY,CAAC;EAClD;EAEAG,WAAWA,CAACC,GAAW;IACrB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,MAAM,GAAG,YAAY,GAAGI,GAAG,CAAC;EACxD;EAEAC,SAASA,CAACC,MAAc,EAAEC,QAAgB;IACxC,MAAMC,WAAW,GAAG,WAAWF,MAAM,aAAaC,QAAQ,EAAE;IAC5D,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,iBAAiBQ,WAAW,EAAE,CAAC;EACpE;EAEAC,aAAaA,CAACC,EAAU;IACtB,MAAMF,WAAW,GAAG,OAAOE,EAAE,EAAE;IAC/B,OAAO,IAAI,CAACX,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,eAAeQ,WAAW,EAAE,CAAC;EAClE;EAEAG,MAAMA,CAACC,GAAW;IAChB,MAAMJ,WAAW,GAAG,QAAQI,GAAG,EAAE;IACjC,OAAO,IAAI,CAACb,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,QAAQQ,WAAW,EAAE,CAAC;EAC3D;EAEAK,aAAaA,CAACC,QAAmB;IAC/B,OAAO,IAAI,CAACf,IAAI,CAACgB,IAAI,CAAC,IAAI,CAACf,MAAM,GAAG,YAAY,EAAEc,QAAQ,CAAC;EAC7D;EAEAE,YAAYA,CAACZ,GAAW,EAAEa,OAAkB;IAC1C,OAAO,IAAI,CAAClB,IAAI,CAACmB,GAAG,CAAC,IAAI,CAAClB,MAAM,GAAG,YAAY,GAAGI,GAAG,EAAEa,OAAO,CAAC;EACjE;EAEAE,cAAcA,CAACT,EAAU;IACvB,OAAO,IAAI,CAACX,IAAI,CAACqB,MAAM,CAAC,IAAI,CAACpB,MAAM,GAAG,UAAU,GAAGU,EAAE,CAAC;EACxD;EAEAW,UAAUA,CAAA;IACR,OAAO1B,QAAQ,CAAC,GAAG,CAAC,CAAC2B,IAAI,CACvB1B,SAAS,CAAC,MAAM,IAAI,CAACG,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,MAAM,GAAG,aAAa,CAAC,CAAC,CAC5D;EACH;;SA5CWH,gBAAgB;;mBAAhBA,MAAgB,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAhB7B,MAAgB;EAAA8B,OAAA,EAAhB9B,MAAgB,CAAA+B,IAAA;EAAAC,UAAA,EAFf;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}